// <auto-generated />
using System;
using FormulariRif_G.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FormulariRif_G.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FormulariRif_G.Models.Autom_Cond", b =>
                {
                    b.Property<int>("Id_Automezzo")
                        .HasColumnType("int")
                        .HasColumnName("id_autom");

                    b.Property<int>("Id_Conducente")
                        .HasColumnType("int")
                        .HasColumnName("id_cond");

                    b.HasKey("Id_Automezzo", "Id_Conducente");

                    b.HasIndex("Id_Conducente");

                    b.ToTable("autom_cond");
                });

            modelBuilder.Entity("FormulariRif_G.Models.Automezzo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("descrizione");

                    b.Property<string>("Targa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("targa");

                    b.HasKey("Id");

                    b.ToTable("automezzi");
                });

            modelBuilder.Entity("FormulariRif_G.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Auto_Comunicazione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("auto_comunicazione");

                    b.Property<string>("CodiceFiscale")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("codice_fiscale");

                    b.Property<bool>("IsTestData")
                        .HasColumnType("bit")
                        .HasColumnName("is_test_data");

                    b.Property<string>("Iscrizione_Albo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("iscrizione_albo");

                    b.Property<string>("PartitaIva")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("partita_iva");

                    b.Property<string>("RagSoc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("rag_soc");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.ToTable("clienti");
                });

            modelBuilder.Entity("FormulariRif_G.Models.ClienteContatto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contatto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .HasColumnName("contatto");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .HasColumnName("email");

                    b.Property<int>("IdCli")
                        .HasColumnType("int")
                        .HasColumnName("id_cli");

                    b.Property<bool>("IsTestData")
                        .HasColumnType("bit")
                        .HasColumnName("is_test_data");

                    b.Property<bool>("Predefinito")
                        .HasColumnType("bit")
                        .HasColumnName("predefinito");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .HasColumnName("telefono");

                    b.HasKey("Id");

                    b.HasIndex("IdCli");

                    b.ToTable("clienti_contatti");
                });

            modelBuilder.Entity("FormulariRif_G.Models.ClienteIndirizzo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Cap")
                        .HasColumnType("int")
                        .HasColumnName("cap");

                    b.Property<string>("Comune")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comune");

                    b.Property<int>("IdCli")
                        .HasColumnType("int")
                        .HasColumnName("id_cli");

                    b.Property<string>("Indirizzo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("indirizzo");

                    b.Property<bool>("IsTestData")
                        .HasColumnType("bit")
                        .HasColumnName("is_test_data");

                    b.Property<bool>("Predefinito")
                        .HasColumnType("bit")
                        .HasColumnName("predefinito");

                    b.HasKey("Id");

                    b.HasIndex("IdCli");

                    b.ToTable("clienti_indirizzi");
                });

            modelBuilder.Entity("FormulariRif_G.Models.Conducente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contatto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contatto");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("descrizione");

                    b.Property<int>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.ToTable("Conducenti");
                });

            modelBuilder.Entity("FormulariRif_G.Models.Configurazione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cap")
                        .HasColumnType("int")
                        .HasColumnName("cap");

                    b.Property<string>("CodiceFiscale")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("codice_fiscale");

                    b.Property<string>("Comune")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("comune");

                    b.Property<DateTime?>("DataIscrizioneAlbo")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_iscrizione_albo");

                    b.Property<bool?>("DatiTest")
                        .HasColumnType("bit")
                        .HasColumnName("dati_test");

                    b.Property<string>("DestAutoComunic")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("dest_auto_comunic");

                    b.Property<string>("DestD")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("dest_d");

                    b.Property<string>("DestNumeroIscrizioneAlbo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("dest_numero_iscrizione_albo");

                    b.Property<string>("DestR")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("dest_r");

                    b.Property<string>("DestTipo1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("dest_tipo1");

                    b.Property<string>("DestTipo2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("dest_tipo2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Indirizzo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("indirizzo");

                    b.Property<string>("NumeroIscrizioneAlbo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("numero_iscrizione_albo");

                    b.Property<string>("PartitaIva")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("partita_iva");

                    b.Property<string>("RagSoc1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("rag_soc1");

                    b.Property<string>("RagSoc2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("rag_soc2");

                    b.HasKey("Id");

                    b.ToTable("configurazione");
                });

            modelBuilder.Entity("FormulariRif_G.Models.FormularioRifiuti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("AllaRinfusa")
                        .HasColumnType("bit")
                        .HasColumnName("alla_rinfusa");

                    b.Property<string>("CarattPericolosita")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("caratteristiche_pericolosita");

                    b.Property<string>("CaratteristicheChimiche")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("caratteristiche_chimiche");

                    b.Property<string>("CodiceEER")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("codice_eer");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2")
                        .HasColumnName("data");

                    b.Property<string>("Descrizione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("descrizione");

                    b.Property<int>("IdAutomezzo")
                        .HasColumnType("int")
                        .HasColumnName("id_automezzo");

                    b.Property<int>("IdDestinatario")
                        .HasColumnType("int")
                        .HasColumnName("id_destinatario");

                    b.Property<int>("IdDestinatarioIndirizzo")
                        .HasColumnType("int")
                        .HasColumnName("id_destinatario_indirizzo");

                    b.Property<int>("IdProduttore")
                        .HasColumnType("int")
                        .HasColumnName("id_produttore");

                    b.Property<int>("IdProduttoreIndirizzo")
                        .HasColumnType("int")
                        .HasColumnName("id_produttore_indirizzo");

                    b.Property<int>("IdTrasportatore")
                        .HasColumnType("int")
                        .HasColumnName("id_trasportatore");

                    b.Property<int>("IdTrasportatoreIndirizzo")
                        .HasColumnType("int")
                        .HasColumnName("id_trasportatore_indirizzo");

                    b.Property<int?>("Kg_Lt")
                        .HasColumnType("int")
                        .HasColumnName("kg_litri");

                    b.Property<int?>("NumeroColli")
                        .HasColumnType("int")
                        .HasColumnName("numero_colli");

                    b.Property<string>("NumeroFormulario")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("numero_formulario");

                    b.Property<bool?>("PesoVerificato")
                        .HasColumnType("bit")
                        .HasColumnName("peso_verificato");

                    b.Property<int?>("Provenienza")
                        .HasColumnType("int")
                        .HasColumnName("provenienza");

                    b.Property<decimal?>("Quantita")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("quantita");

                    b.Property<int?>("SatoFisico")
                        .HasColumnType("int")
                        .HasColumnName("stato_fisico");

                    b.HasKey("Id");

                    b.HasIndex("IdAutomezzo");

                    b.HasIndex("IdDestinatario");

                    b.HasIndex("IdDestinatarioIndirizzo");

                    b.HasIndex("IdProduttore");

                    b.HasIndex("IdProduttoreIndirizzo");

                    b.HasIndex("IdTrasportatore");

                    b.HasIndex("IdTrasportatoreIndirizzo");

                    b.ToTable("formulari_rifiuti");
                });

            modelBuilder.Entity("FormulariRif_G.Models.Utente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Admin")
                        .HasColumnType("bit")
                        .HasColumnName("admin");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<bool>("MustChangePassword")
                        .HasColumnType("bit")
                        .HasColumnName("must_change_password");

                    b.Property<string>("NomeUtente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("utente");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("passwordsalt");

                    b.HasKey("Id");

                    b.ToTable("utenti");
                });

            modelBuilder.Entity("FormulariRif_G.Models.Autom_Cond", b =>
                {
                    b.HasOne("FormulariRif_G.Models.Automezzo", "Automezzo")
                        .WithMany("AutomezziConducenti")
                        .HasForeignKey("Id_Automezzo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FormulariRif_G.Models.Conducente", "Conducente")
                        .WithMany("ConducentiAutomezzi")
                        .HasForeignKey("Id_Conducente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Automezzo");

                    b.Navigation("Conducente");
                });

            modelBuilder.Entity("FormulariRif_G.Models.ClienteContatto", b =>
                {
                    b.HasOne("FormulariRif_G.Models.Cliente", "Cliente")
                        .WithMany("Contatti")
                        .HasForeignKey("IdCli")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("FormulariRif_G.Models.ClienteIndirizzo", b =>
                {
                    b.HasOne("FormulariRif_G.Models.Cliente", "Cliente")
                        .WithMany("Indirizzi")
                        .HasForeignKey("IdCli")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("FormulariRif_G.Models.FormularioRifiuti", b =>
                {
                    b.HasOne("FormulariRif_G.Models.Automezzo", "Automezzo")
                        .WithMany()
                        .HasForeignKey("IdAutomezzo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FormulariRif_G.Models.Cliente", "Destinatario")
                        .WithMany()
                        .HasForeignKey("IdDestinatario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FormulariRif_G.Models.ClienteIndirizzo", "DestinatarioIndirizzo")
                        .WithMany()
                        .HasForeignKey("IdDestinatarioIndirizzo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FormulariRif_G.Models.Cliente", "Produttore")
                        .WithMany()
                        .HasForeignKey("IdProduttore")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FormulariRif_G.Models.ClienteIndirizzo", "ProduttoreIndirizzo")
                        .WithMany()
                        .HasForeignKey("IdProduttoreIndirizzo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FormulariRif_G.Models.Cliente", "Trasportatore")
                        .WithMany()
                        .HasForeignKey("IdTrasportatore")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FormulariRif_G.Models.ClienteIndirizzo", "TrasportatoreIndirizzo")
                        .WithMany()
                        .HasForeignKey("IdTrasportatoreIndirizzo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Automezzo");

                    b.Navigation("Destinatario");

                    b.Navigation("DestinatarioIndirizzo");

                    b.Navigation("Produttore");

                    b.Navigation("ProduttoreIndirizzo");

                    b.Navigation("Trasportatore");

                    b.Navigation("TrasportatoreIndirizzo");
                });

            modelBuilder.Entity("FormulariRif_G.Models.Automezzo", b =>
                {
                    b.Navigation("AutomezziConducenti");
                });

            modelBuilder.Entity("FormulariRif_G.Models.Cliente", b =>
                {
                    b.Navigation("Contatti");

                    b.Navigation("Indirizzi");
                });

            modelBuilder.Entity("FormulariRif_G.Models.Conducente", b =>
                {
                    b.Navigation("ConducentiAutomezzi");
                });
#pragma warning restore 612, 618
        }
    }
}
